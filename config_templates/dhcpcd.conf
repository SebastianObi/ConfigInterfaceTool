# A sample configuration for dhcpcd.
# See dhcpcd.conf(5) for details.

# Allow users of this group to interact with dhcpcd via the control socket.
#controlgroup wheel

# Inform the DHCP server of our hostname for DDNS.
hostname

# Use the hardware address of the interface for the Client ID.
clientid
# or
# Use the same DUID + IAID as set in DHCPv6 for DHCPv4 ClientID as per RFC4361.
# Some non-RFC compliant DHCP servers do not reply with this set.
# In this case, comment out duid and enable clientid above.
#duid

# Persist interface configuration when dhcpcd exits.
persistent

# Rapid commit support.
# Safe to enable by default because it requires the equivalent option set
# on the server to actually work.
option rapid_commit

# A list of options to request from the DHCP server.
option domain_name_servers, domain_name, domain_search, host_name
option classless_static_routes
# Respect the network MTU. This is applied to DHCP routes.
option interface_mtu

# Most distributions have NTP support.
#option ntp_servers

# A ServerID is required by RFC2131.
require dhcp_server_identifier

# Generate SLAAC address using the Hardware Address of the interface
#slaac hwaddr
# OR generate Stable Private IPv6 Addresses based from the DUID
slaac private

# Example static IP configuration:
#interface eth0
#static ip_address=192.168.0.10/24
#static ip6_address=fd51:42f8:caae:d92e::ff/64
#static routers=192.168.0.1
#static domain_name_servers=192.168.0.1 8.8.8.8 fd51:42f8:caae:d92e::1

# It is possible to fall back to a static IP if DHCP fails:
# define static profile
#profile static_eth0
#static ip_address=192.168.1.23/24
#static routers=192.168.1.1
#static domain_name_servers=192.168.1.1

# fallback to static profile on eth0
#interface eth0
#fallback static_eth0


####network_ap_power==True####
interface ap0
static ip_address=**network_ap_ip**/**network_ap_sn**
nohook wpa_supplicant
####

####network_ap_power!=True####
denyinterfaces ap0
####


####network_wlan_power==True && network_wlan_dhcp_client!=True####
interface wlan0
static ip_address=**network_wlan_ip**/**network_wlan_sn**
####

####network_wlan_power==True && network_wlan_dhcp_client!=True && network_wlan_dhcp_server!=True####
static routers=**network_wlan_gw**
####

####network_wlan_power==True && network_wlan_dhcp_client!=True && network_wlan_dhcp_server!=True && network_wlan_dns==False####
static domain_name_servers=**network_wlan_dns1** **network_wlan_dns2**
####

####network_wlan_power==True && network_wlan_dhcp_client!=True && network_wlan_dhcp_server!=True && network_wlan_dns!=False####
static domain_name_servers=**network_wlan_dns**
####

####network_wlan_power!=True####
denyinterfaces wlan0
####


####network_lan_power==True && network_lan_dhcp_client!=True####
interface eth0
static ip_address=**network_lan_ip**/**network_lan_sn**
####

####network_lan_power==True && network_lan_dhcp_client!=True && network_lan_dhcp_server!=True####
static routers=**network_lan_gw**
####

####network_lan_power==True && network_lan_dhcp_client!=True && network_lan_dhcp_server!=True && network_lan_dns==False####
static domain_name_servers=**network_lan_dns1** **network_lan_dns2**
####

####network_lan_power==True && network_lan_dhcp_client!=True && network_lan_dhcp_server!=True && network_lan_dns!=False####
static domain_name_servers=**network_lan_dns**
####

####network_lan_power!=True####
denyinterfaces eth0
####